plugins {
    id 'java'
    id "me.champeau.jmh" version "0.6.8"
}

group 'org.demo.reactive'
version '1.0-SNAPSHOT'

sourceCompatibility = 1.8

repositories {
    mavenCentral()
}

dependencies {
    implementation 'org.reactivestreams:reactive-streams:1.0.4'

    testImplementation 'org.reactivestreams:reactive-streams-tck:1.0.4'
    testImplementation group: 'junit', name: 'junit', version: '4.12'
    testImplementation 'org.assertj:assertj-core:3.12.2'
    testImplementation 'org.testng:testng:6.14.3'

    // Helper libraries
    implementation 'org.apache.commons:commons-lang3:3.8.1'
    implementation 'com.google.guava:guava:27.0.1-jre'

    compileOnly 'org.projectlombok:lombok:1.18.6'
    annotationProcessor 'org.projectlombok:lombok:1.18.6'

    // Optional Metrics
    compileOnly platform("io.micrometer:micrometer-bom:1.10.2")
    compileOnly "io.micrometer:micrometer-commons"
    compileOnly "io.micrometer:micrometer-core"

    // Optional context-propagation
    compileOnly "io.micrometer:context-propagation:1.0.0"


    compileOnly "org.slf4j:slf4j-api:1.7.36"
    testCompileOnly "org.slf4j:slf4j-api:1.7.36"

    jmh 'org.openjdk.jmh:jmh-core:1.21'
    jmh 'org.openjdk.jmh:jmh-generator-annprocess:1.21'
}

jmh {
    resultFormat = 'JSON' // Result format type (one of CSV, JSON, NONE, SCSV, TEXT)
    resultsFile = project.file("${project.buildDir}/reports/jmh/results.json")
//    duplicateClassesStrategy = 'WARN' // Strategy to apply when encountring duplicate
}

test { //this is the gradle task to be executed
    useTestNG() { //Tells Gradle to use TestNG
        useDefaultListeners = true // Tells TestNG to execute its default reporting structure
    }
}
